REST Interface
--------------

The inserter, management and the delivery nodes have a dedicated REST interface
that is using the GET, PUT and DELETE verbs. The creation of links and routes are
idempotent which means creating the same resource will replace the old one. All
O&M changes made via the REST interface require a restart of the specific node.

In case more than one node is configured for a specific role one should either use
different databases or at least a different collection for the configuration which
will require running a different O&M manager as well. Please see the chapter about
the CLI arguments on how to do that.


SMPP Inserter Interface
~~~~~~~~~~~~~~~~~~~~~~~

One can configure the SMPPConnection (outgoing connection) and the SMPPConnectionManager
(waiting for one connection of a specific systemId/password) through the REST interface.
There are operations to list all connections, to create a new one, to look at a specific
one and to remove one.


Listing all SMPP connections
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

----
$ curl -H "Content-Type: application/json" -XGET http://localhost:1700/v1/inserterSMPPLinks
[
	{
		"connectionType" : "client",
		"systemType" : "systemType",
		"password" : "password",
		"role" : null,
		"port" : 4444,
		"hostname" : "nameOfServer",
		"systemId" : "systemId",
		"connectionName" : "NAME"
	},
	{
		"connectionType" : "server",
		"systemType" : "systemType",
		"allowedRemotePort" : 6666,
		"allowedRemoteAddress" : "127.0.0.1",
		"password" : "password",
		"port" : 5555,
		"role" : null,
		"systemId" : "systemId",
		"connectionName" : "NAME2"
	}
]
----

Result codes:: Under normal operation only 200 with an JSON array should be returned.

Creating or updating a SMPP connection
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The SMPPConnection of type "client" can specify the remote hostname and port while the
SMPPConnectionManager of type "server" allows to specify the port to bind to and from
which remote IPv4/port the connection should arrive.

----
$ curl -H "Content-Type: application/json" -XPUT http://localhost:1700/v1/inserterSMPPLink/NAME \
-d '{
	"connectionType": "client",
	"hostname": "nameOfServer",
	"port": PortNumber,
	"systemId": "systemId",
	"systemType": "systemType",
	"password": "password"
}'
"OK"

$ curl -H "Content-Type: application/json" -XPUT http://localhost:1700/v1/inserterSMPPLink/NAME2 \
-d '{
	"connectionType": "server",
	"port": PortNumber,
	"systemId": "systemId",
	"systemType": "systemType",
	"password": "password",
	"allowedRemoteAddress": "127.0.0.1",
	"allowedRemotePort": aSourcePortNumber
}'
"OK"
----

Result codes:: In case of invalid JSON a 5XX response will be returned, in case of incomplete document a 5XX will be returned as well, in case no connection can be created a 4XX will be returned


Inspect a SMPP connection
^^^^^^^^^^^^^^^^^^^^^^^^^

Show the settings of one configured SMPP link. This can either be a client or server.

----
$ curl -H "Content-Type: application/json" -XGET http://localhost:1700/v1/inserterSMPPLink/NAME
{
	"connectionType" : "client",
	"systemType" : "systemType",
	"password" : "password",
	"role" : null,
	"port" : 4444,
	"hostname" : "nameOfServer",
	"systemId" : "systemId",
	"connectionName" : "NAME"
}
----

Result codes:: In case no connection with than name exists a 404 will be returned, otherwise
a 200 with the JSON response response will be returned


Delete a SMPP connection
^^^^^^^^^^^^^^^^^^^^^^^^

Remove the configuration of a SMPP link.

----
$ curl -H "Content-Type: application/json" -XDELETE http://localhost:1700/v1/inserterSMPPLink/NAME
"OK"
----

Result codes:: In case no connection with name exists a 404 will be returned, otherwise a 200 with an EMPTY return will be returned.



SMPP Delivery Interface
~~~~~~~~~~~~~~~~~~~~~~~

It is possible to make deliveries using SMPP. These links are configured independly
to the inserter interface but follow the same documents as with the inserter, the only
difference is the URL.

Instead of inserterSMPPLink it is deliverySMPPLink and instead of inserterSMPPLinks it
is deliverySMPPLinks.

---
Parameters same as with the inserter
$ curl -H "Content-Type: application/json" -XGET http://localhost:1700/v1/deliverySMPPLinks
$ curl -H "Content-Type: application/json" -XPUT http://localhost:1700/v1/deliverSMPPLink/NAME
$ curl -H "Content-Type: application/json" -XGET http://localhost:1700/v1/deliverSMPPLink/NAME
$ curl -H "Content-Type: application/json" -XDELETE http://localhost:1700/v1/deliverSMPPLink/NAME
...


SS7 Delivery Interface
~~~~~~~~~~~~~~~~~~~~~~

The main function of the SMSC Delivery is to deliver using SS7. One needs to configure
one or multiple network connections to the osmo-stp SCTP/TCP bridge. The configuration
is very similar to the above routines and supports the same verbs.


Listing all SS7 Network Services
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

----
$ curl -H "Content-Type: application/json" -XGET http://localhost:1700/v1/deliverySS7Links
[
	{
		"class" : "SCCPNetworkServiceOsmoDirect",
		"token" : "Token",
		"port" : 12345,
		"connectionName" : "NAME",
		"hostname" : "host"
	}
]
----

Creating a SS7 Network Service
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

----
$ curl -H "Content-Type: application/json" -XPUT http://localhost:1700/v1/deliverySS7Link/NAME \
-d '{
	"hostname": "host",
	"port": PortNumber,
	"token": "Token"
}'
"OK"
----

Inpect a SS7 Network Service
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Show the settings of one configured SS7 delivery link.

---
$ curl -H "Content-Type: application/json" -XGET http://localhost:1700/v1/deliverySS7Link/NAME
{
	"class" : "SCCPNetworkServiceOsmoDirect",
	"token" : "Token",
	"port" : 12345,
	"connectionName" : "NAME",
	"hostname" : "host"
}
---

Delete a SS7 Network Service
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Delete a configured SS7 delivery link.

----
$ curl -H "Content-Type: application/json" -XDELETE http://localhost:1700/v1/deliverySS7Link/NAME
"OK"
----

Routes for Delivery
~~~~~~~~~~~~~~~~~~~

A route is looked-up before the delivery of a SMS is attempted. The next sections list
commands to query and manipulate routes.

Listing all routes
^^^^^^^^^^^^^^^^^^

----
$ curl -H "Content-Type: application/json" -XGET http://localhost:1700/v1/deliveryRoutes

[
    {
        "systemId" : "OptionalSystemdIdMatch",
        "default" : false,
        "destinationAddressPrefixLength" : 4,
        "priority" : 100,
        "destinationAddressPrefix" : "1234",
        "sourceAddressPrefix" : "4567",
        "methods" : [
            {
                "connectionName" : "NAME",
                "class" : "ShortMessageDeliveryMethodSMPP",
                "messageType" : "deliverSM"
            },
            {
                "class" : "ShortMessageDeliveryMethodSS7",
                "ssn" : 7,
                "globalTitle" : "49111111",
                "sendRoutingInfoTranslationType" : 2,
                "smscNumber" : "49111111",
                "forwardSMTranslationType" : 0,
                "connectionName" : "NAME",
                "mapVersion" : 2
            }
        ],
        "routeName" : "NAME",
        "sourceAddressPrefixLength" : 4
    }
]
----

Result codes:: Under normal operation only 200 with an JSON array should be returned.

Creating or updating a route
^^^^^^^^^^^^^^^^^^^^^^^^^^^^


----
$ curl -H "Content-Type: application/json" -XPUT http://localhost:1700/v1/deliveryRoute/NAME \
-d '{
    "systemId": "OptionalSystemdIdMatch",
    "priority": OptionalNumberPriority,
    "default": OptionalBooleanDefault,
    "destinationAddressPrefix": "OptionalDestinationPrefix",
    "sourceAddressPrefix": "OptionalSourceAddressPrefix",
    "methods": [
        {
            "class": "ShortMessageDeliveryMethodSMPP",
            "connectionName": "aSMPPDeliveryLinkName",
            "messageType": "SMPPMessageTypeToUse"
        },
        {
            "class": "ShortMessageDeliveryMethodSS7",
            "connectionName": "aSS7DeliveryLinkName",
            "globalTitle": "CallingGT to use",
            "ssn": aCallingSsnNumber,
            "smscNumber": "aSMSCGTNumber",
            "sendRoutingInfoTranslationType": aGTTranslationType,
            "forwardSMTranslationType": aGTTtranslationType,
            "mapVersion": aVersionNumber
        }
    ]
}'
"OK"
----

messageType:: Either deliverSM or submitSM are valid for class ShortMessageDeliveryMethodSMPP.

Result codes:: In case of invalid JSON a 5XX response will be returned, in case of incomplete document a 5XX will be returned as well, in case no connection can be created a 4XX will be returned


Inspect a route
^^^^^^^^^^^^^^^

Show the settings of one configured SMPP link. This can either be a client or server.

----
$ curl -H "Content-Type: application/json" -XGET http://localhost:1700/v1/deliveryRoute/NAME
{
    "systemId" : "OptionalSystemdIdMatch",
    "default" : false,
    "destinationAddressPrefixLength" : 4,
    "priority" : 100,
    "destinationAddressPrefix" : "1234",
    "sourceAddressPrefix" : "4567",
    "methods" : [
        {
            "connectionName" : "NAME",
            "class" : "ShortMessageDeliveryMethodSMPP",
            "messageType" : "deliverSM"
        },
        {
            "class" : "ShortMessageDeliveryMethodSS7",
            "ssn" : 7,
            "globalTitle" : "49111111",
            "sendRoutingInfoTranslationType" : 2,
            "smscNumber" : "49111111",
            "forwardSMTranslationType" : 0,
            "connectionName" : "NAME",
            "mapVersion" : 2
        }
    ],
    "routeName" : "NAME",
    "sourceAddressPrefixLength" : 4
}
----

Result codes:: In case no connection with than name exists a 404 will be returned, otherwise
a 200 with the JSON response response will be returned


Delete a route
^^^^^^^^^^^^^^

----
$ curl -H "Content-Type: application/json" -XDELETE http://localhost:1700/v1/deliveryRoute/NAME
"OK"
----

Result codes:: In case no connection with name exists a 404 will be returned, otherwise a 200 with an EMPTY return will be returned.
